@using System.Web.Razor.Parser.SyntaxTree
@using System.Web.UI.WebControls
@using RMS.App.ViewModels
@model RMS.App.ViewModels.EmployeeViewModel

@{
    ViewBag.Title = "Create Employee";
}

<h2>Create Employee</h2>
<br />

@using (Html.BeginForm())
            {
    @Html.AntiForgeryToken()


<div class="container">
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#menu1">&nbsp; <strong>Read this Carefully</strong> &nbsp;&nbsp;</a></li>
        <li class=""><a data-toggle="tab" href="#menu2">&nbsp;&nbsp; <strong>Personal Informatin</strong> &nbsp;&nbsp;</a></li>
        <li class=""><a data-toggle="tab" href="#menu3">&nbsp;&nbsp; <strong>Address</strong> &nbsp;&nbsp; </a></li>
        <li class=""><a data-toggle="tab" href="#menu4">&nbsp;&nbsp; <strong>Office Information</strong> &nbsp;&nbsp;</a></li>
        <li class=""><a data-toggle="tab" href="#menu5">&nbsp;&nbsp; <strong>Employee Image</strong> &nbsp;&nbsp;</a></li>
        <li class=""><a data-toggle="tab" href="#menu6">&nbsp;&nbsp; <strong>Login Information</strong> &nbsp;&nbsp;</a></li>
    </ul>
    <br/>
        @if (TempData["msg"] != null)
        {
            <div class="alert alert-warning text-danger">
                @Html.Raw(TempData["msg"])
            </div>
        }
    <p class="text-danger">@ViewBag.Message1</p>
    <p class="text-danger">@ViewBag.Message2</p>
    <p class="text-danger">@ViewBag.Message3</p>
    <p class="text-danger">@ViewBag.Message4</p>

<div class="tab-content">
@*Read This Carefully*@
<div id="menu1" class="tab-pane fadeInDown active text-justify">

    <br/>
    A Registered Employment Agreement (REA) is a collective agreement made between a trade union or unions and either an individual employer, a group of employers or an employers’ organisation. An REA can set the pay and conditions of employment of the workers specified in the agreement. An REA must be registered with the Labour Court. The effect of registration makes the REA binding on the subscribing parties.

    An REA must contain a disputes procedure that is binding on the parties to the agreement. Any breaches of an REA may be referred to the WRC.

    The Industrial Relations (Amendment) Act 2015 provides for a system of registered employment agreements. Section 8 of the Act requires that the Labour Court keep a register of employment agreements.
    <br/><br/>
    <div class="form-group row">
        <div class="col-md-6">
            <ul class="nav nav-tabs border-0">
                <li><a class="btn btn-dark" data-toggle="tab" href="#menu2">Next Page</a></li>
            </ul>
        </div>
    </div>
</div>

@*Personal Info*@
<div id="menu2" class="tab-pane fadeInDown">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <h3 class="col-md-offset-3">Personal Info</h3><br/>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group row">

                    @Html.LabelFor(model => model.EmployeeTypeId, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.DropDownList("EmployeeTypeId", null, "Select", htmlAttributes: new {@class = "form-control", @id = "searchableDD1"})
                        @Html.ValidationMessageFor(model => model.EmployeeTypeId, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group row">

                    @Html.LabelFor(model => model.FullName, null, htmlAttributes: new {@class = "control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.FullName, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Your Name"}})
                        @Html.ValidationMessageFor(model => model.FullName, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group row">

                    @Html.LabelFor(model => model.ContactNo, htmlAttributes: new {@class = "control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ContactNo, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Mobile No"}})
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new {@class = "text-danger"})
                        <p class="text-danger">@ViewBag.Message2</p>
                    </div>
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group row">

                    @Html.LabelFor(model => model.NID, htmlAttributes: new {@class = "control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.NID, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "NID No"}})
                        @Html.ValidationMessageFor(model => model.NID, "", new {@class = "text-danger"})
                        <p class="text-danger">@ViewBag.Message3</p>
                    </div>
                </div>

                <div class="form-group row">

                    @Html.LabelFor(model => model.DrivingLicence, htmlAttributes: new {@class = "control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DrivingLicence, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "DL No"}})
                        @Html.ValidationMessageFor(model => model.DrivingLicence, "", new {@class = "text-danger"})
                        <p class="text-danger">@ViewBag.Message4</p>
                    </div>
                </div>

                <div class="form-group row">

                    @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new {@class = "control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BloodGroup, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Blood Group"}})
                        @Html.ValidationMessageFor(model => model.BloodGroup, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="form-group row">
                    <div class="col-md-2"></div>
                    <div class="col-md-6">
                        <ul class="nav nav-tabs border-0">
                            <li><a class="btn btn-dark" data-toggle="tab" href="#menu1">Previous</a></li> &nbsp;
                            <li>&nbsp;&nbsp;</li> &nbsp;
                            <li><a class="btn btn-dark" data-toggle="tab" href="#menu3" onclick="" id="nextBtn">&nbsp; Next &nbsp;</a></li>
                        </ul>
                    </div>
                </div>
            </div>

        </div>

    </div>
</div>

@*Address Info*@
<div id="menu3" class="tab-pane fade">
    <div class="form-horizontal">
        <h3 class="col-md-offset-3">Address Info</h3><br/>
        <div class="row">
            <!--Present Address-->
            <div class="col-md-6" style="background-color: #e6e6fa" id="readOnlyPresentAddress">
                <br/>
                <div class="form-group row">
                    <div class="col-md-12">
                        <b><strong><u>Mailing / Present Address :</u></strong></b>
                        <input name="Addresses.Index" value="0" type="hidden"/>
                    </div>
                </div>
                <div class="form-group row" hidden="hidden">
                    @Html.LabelFor(model => model.AddressViewModel.AddressType, htmlAttributes: new {@class = "control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.TextBox("Addresses[0].AddressType", "Present Address", new {htmlAttributes = new {@class = "form-control", @id = "addressType"}})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.AddressLine1, htmlAttributes: new {@class = "control-label col-md-3"})
                    <div class="col-md-9">

                        @Html.Editor("Addresses[0].AddressLine1", null, new {htmlAttributes = new {@class = "form-control", placeHolder = "House No: , Flat No: , Road No:", @id = "addressLine1"}})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.AddressLine1, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.AddressLine2, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.Editor("Addresses[0].AddressLine2", null, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Village: / Moholla:", @id = "addressLine2"}})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.AddressLine2, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.PostOffice, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.Editor("Addresses[0].PostOffice", null, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Post Office", @id = "postOffice"}})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.PostOffice, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.PostCode, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.Editor("Addresses[0].PostCode", null, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Post Code", @id = "postCode"}})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.PostCode, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.DivisionId, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.DropDownList("Addresses[0].DivisionId", new SelectList(Model.DivisionList, "Id", "Name"), "Select Division", htmlAttributes: new {@class = "form-control", @id = "divisionDD"})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.DivisionId, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.DistrictId, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.DropDownList("Addresses[0].DistrictId", new SelectList(""), "Select District", htmlAttributes: new {@class = "form-control", @id = "districtDD"})

                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.UpazilaId, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-8">
                        @Html.DropDownList("Addresses[0].UpazilaId", new SelectList(""), "Select Upazila/Thana", htmlAttributes: new {@class = "form-control", @id = "upazilaDD"})

                    </div>
                </div>
            </div>

            <!--Permanent Address-->
            <div class="col-md-6" style="background-color: #e6e6fa">
                <br/>
                <div class="form-group row">
                    <div class="col-md-6">

                        <b><strong><u>Permanent Address :</u></strong></b>
                        <input name="Addresses.Index" value="1" type="hidden"/>
                    </div>
                    <div class="col-md-5">
                        @*<input type="checkbox" id="PACheckBox1"/> <strong> Same as present address </strong>*@
                    </div>
                </div>
                <div class="form-group row" hidden="hidden">
                    @Html.LabelFor(model => model.AddressViewModel.AddressType, htmlAttributes: new {@class = "control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.TextBox("Addresses[1].AddressType", "Permanent Address", new {htmlAttributes = new {@class = "form-control", @id = "addressTypep"}})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.AddressLine1, htmlAttributes: new {@class = "control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.Editor("Addresses[1].AddressLine1", null, new {htmlAttributes = new {@class = "form-control", placeHolder = "House No: , Flat No: , Road No:", @id = "addressLine1p"}})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.AddressLine1, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.AddressLine2, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.Editor("Addresses[1].AddressLine2", null, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Village: / Moholla:", @id = "addressLine2p"}})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.AddressLine2, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.PostOffice, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.Editor("Addresses[1].PostOffice", null, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Post Office", @id = "postOfficep"}})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.PostOffice, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.PostCode, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.Editor("Addresses[1].PostCode", null, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Post Code", @id = "postCodep"}})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.PostCode, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.DivisionId, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.DropDownList("Addresses[1].DivisionId", new SelectList(Model.DivisionList, "Id", "Name"), "Select Division", htmlAttributes: new {@class = "form-control", @id = "divisionDDp"})
                        @Html.ValidationMessageFor(model => model.AddressViewModel.DivisionId, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.DistrictId, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.DropDownList("Addresses[1].DistrictId", new SelectList(""), "Select District", htmlAttributes: new {@class = "form-control", @id = "districtDDp"})

                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.AddressViewModel.UpazilaId, htmlAttributes: new {@class = "control-label col-md-3 required"})
                    <div class="col-md-9">
                        @Html.DropDownList("Addresses[1].UpazilaId", new SelectList(""), "Select Upazila/Thana", htmlAttributes: new {@class = "form-control", @id = "upazilaDDp"})

                    </div>
                </div>
            </div>
        </div>

    </div>
    <br/>
    <div class="form-group row">
        <div class="col-md-8">
            <ul class="nav nav-tabs border-0">
                <li><a class="btn btn-dark" data-toggle="tab" href="#menu2">Provious</a></li> &nbsp;
                <li>&nbsp;&nbsp;</li>&nbsp;
                <li><a class="btn btn-dark" data-toggle="tab" href="#menu4"> &nbsp; Next &nbsp; </a></li>
            </ul>
        </div>
    </div>
</div>

@*Office Information*@
<div id="menu4" class="tab-pane fade">
    <div class="form-horizontal">
        <h3 class="col-md-offset-3">Office Info</h3><br/>
        <div class="form-group row">
            @Html.LabelFor(model => model.OrganizationId, htmlAttributes: new {@class = "control-label col-md-2 required"})
            <div class="col-md-4">
                @Html.DropDownList("OrganizationId", null, "Select", htmlAttributes: new {@class = "form-control", @id = "searchableDD2"})
                @Html.ValidationMessageFor(model => model.OrganizationId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new {@class = "control-label col-md-2 required"})
            <div class="col-md-4">
                @Html.DropDownList("DepartmentId", null, "Select", htmlAttributes: new {@class = "form-control", @id = "searchableDD3"})
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group row">

            @Html.LabelFor(model => model.DesignationId, htmlAttributes: new {@class = "control-label col-md-2 required"})
            <div class="col-md-4">
                @Html.DropDownList("DesignationId", null, "Select", htmlAttributes: new {@class = "form-control", @id = "searchableDD4"})
                @Html.ValidationMessageFor(model => model.DesignationId, "", new {@class = "text-danger"})
            </div>
        </div>



    </div>
  
    <div class="form-group row">
        <div class="col-md-8">
            <ul class="nav nav-tabs border-0">
                <li><a class="btn btn-dark" data-toggle="tab" href="#menu3">Provious</a></li> &nbsp;
                <li>&nbsp;&nbsp;</li>&nbsp;
                <li><a class="btn btn-dark" data-toggle="tab" href="#menu5"> &nbsp; Next &nbsp; </a></li>
            </ul>
        </div>
    </div>
</div>

@*Employee Image*@
    <div id="menu5" class="tab-pane fade">
        <div class="form-horizontal">
            <h3 class="col-md-offset-3">Employee Image</h3><br/>
            <div class="form-group row" hidden="hidden">
                @Html.LabelFor(model => model.EmployeeImageId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.EmployeeImageId, null, new { @class = "form-control", @id = "empImageId" })
                    @Html.ValidationMessageFor(model => model.EmployeeImageId, "", new { @class = "text-danger" })
                </div>
            </div>
            <!--Image Partial View-->
            @Html.Partial("_ImageUpload")
        </div>

        <div class="form-group row">
            <div class="col-md-8">
                <ul class="nav nav-tabs border-0">
                    <li><a class="btn btn-dark" data-toggle="tab" href="#menu4">Provious</a></li> &nbsp;
                    <li>&nbsp;&nbsp;</li>&nbsp;
                    <li><a class="btn btn-dark" data-toggle="tab" href="#menu6"> &nbsp; Next &nbsp; </a></li>
                </ul>
            </div>
        </div>
    </div>

@*LogIn Information*@
    <div id="menu6" class="tab-pane fade">
            <div class="form-horizontal">

                <h3 class="col-md-offset-3">LogIn Information </h3><br/>
                <div class="form-group row">
                    @Html.LabelFor(model => model.IsChecked,"Role Assign", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <p>By Default It's User</p>
                        Controller
                        @Html.CheckBoxFor(model => model.IsChecked)
                        @Html.ValidationMessageFor(model => model.IsChecked, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Email, null, htmlAttributes: new {@class = "form-control", @placeholder = "Email"})
                        @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Password, htmlAttributes: new {@class = "form-control", @placeholder = "Password"})
                        @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "form-control", @placeholder = "Confirm Password"})
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
                    </div>
                </div>


            </div>
            <div class="form-group row">
                <div class="col-md-2"></div>
                <div class="col-md-6">
                    <input type="submit" value="Save" class="btn btn-success" /> &nbsp;
                    @Html.ActionLink("Back to List", "GetAllEmployee", "Employees", null, new { @class = "btn btn-info" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-3">
                    <ul class="nav nav-tabs border-0">
                        <li><a class="btn btn-dark" data-toggle="tab" href="#menu5">Provious</a></li>

                    </ul>
                </div>
            </div>
        </div>

</div>

</div>


  

}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/AddressJs/CreateEmployeeAddress.js"></script>
    <script src="~/Scripts/chosenDD/chosen_DD.js"></script>
    <script src="~/Scripts/ImageUploadJs/ImageUpload.js"></script>
}
