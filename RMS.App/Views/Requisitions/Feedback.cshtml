@model RMS.App.ViewModels.FeedbackViewModel

@{
    ViewBag.Title = "Feedback";
    Layout = "~/Views/Shared/_LayoutLogIn.cshtml";
}

<h2>Feedback</h2>
<hr />
<div class="container border">
    <br/>

    <div class="col-md-6">
        @if (ViewBag.Msg != null)
        {
            <div>@ViewBag.Msg</div>
        }
    </div>


    <div class="row">
        <div class="col-md-6">
            <div class="form-group row">
                @Html.Label("Name", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.Employee.FullName, new {htmlAttributes = new {@class = "form-control", @readOnly = "readonly"}})
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Requisition No", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.RequisitionNumber, new {htmlAttributes = new {@class = "form-control", @readOnly = "readonly"}})
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("From Place", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.FromPlace, new {htmlAttributes = new {@class = "form-control", @readOnly = "readonly"}})
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Destination Place", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.DestinationPlace, new {htmlAttributes = new {@class = "form-control", @readOnly = "readonly"}})
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Passenger Qty", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.PassengerQty, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group row">
                @Html.Label("Journey Date", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.StartDateTime, new {htmlAttributes = new {@class = "form-control", @readOnly = "readonly"}})
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Return Date", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.EndDateTime, new {htmlAttributes = new {@class = "form-control", @readOnly = "readonly"}})
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Description", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.Description, new {htmlAttributes = new {@class = "form-control", @readOnly = "readonly"}})
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Requist For", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Requisition.RequestFor, new {htmlAttributes = new {@class = "form-control", @readOnly = "readonly"}})
                </div>
            </div>

            @*<div class="form-group row">
                Like
                <div class="col-md-9">
                    @Html.ActionLink("Like", "Like", new {id = Model.Id}, new {@class = "btn-btn-default"})
                </div>
            </div>*@

        </div>
    </div>
    @Html.HiddenFor(model => model.Requisition.Id)
    <br/>
</div>
<br/>
<div class="container border">
    <br/>
    <div class="row"  style="margin: 10px 10px;">
        
        <div class="col-md-5">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal row">
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CommentText, htmlAttributes: new {@class = "control-label col-md-12"})
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.CommentText, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.CommentText, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="row">
                    <input type="submit" value="Post" class="btn btn-success" /> &nbsp;
                    @Html.ActionLink("Back to List", "Create","Requisitions", null, new { @class = "btn btn-info" })
                </div>
            }
            
        </div>
        <div class="col-md-7">
            @{
                var data = ViewBag.Feedback;
            }
            @if (data != null)
            {
                <div class="row">
                    <div class="col-md-12">
                        <p class="text-center" style="font-size: 16px;"><strong>Comment Box</strong></p>
                    </div>
                    <div class="col-md-12">
                        <table class="table table-bordered">
                            @Html.Hidden("returnUrl", this.Request.RawUrl)
                            @foreach (var comment in data)
                            {

                                <tr>
                                    <td style="width: 25%">Employee :<br/>@comment.Requisition.Employee.FullName</td>
                                    <td style="width: 65%">Comment :<br/>@comment.CommentText</td>
                                    <td style="width: 10%">@Html.ActionLink("Reply", "Reply",new {feedbackId = @comment.Id }, new {@class = "btn btn-outline-primary btn-sm"})</td>

                                </tr>
                            }
                        </table>
                        </div>
                </div>
            }
        </div>
    </div>
    <br/>
</div>
<div class=""><p></p></div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}